{"ast":null,"code":"var _jsxFileName = \"/home/lrawicz/develop/code/upwork/qr/bidqr-frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [amount, setAmount] = useState('');\n  const [text, setText] = useState('');\n  const [room, setRoom] = useState('bidRoom');\n  const webSocket = useRef(null);\n  useEffect(() => {\n    const wsUrl = process.env.REACT_APP_WEBSOCKET_URL || 'ws://localhost:3000';\n    webSocket.current = new WebSocket(wsUrl);\n    webSocket.current.onopen = () => {\n      console.log('WebSocket connected');\n      if (webSocket.current) {\n        const message = {\n          meta: \"join\",\n          room\n        };\n        webSocket.current.send(JSON.stringify(message));\n      }\n    };\n    webSocket.current.onmessage = event => {\n      try {\n        // The public echo server will send back the same message we sent.\n        // In a real application, the server would broadcast messages from other users.\n        const receivedMessage = JSON.parse(event.data);\n        console.log(receivedMessage);\n        if (receivedMessage.amount && receivedMessage.text && receivedMessage.id) {\n          console.log('Received message:', receivedMessage);\n          setMessages(prevMessages => [...prevMessages, {\n            ...receivedMessage,\n            key: receivedMessage.id\n          }]);\n        }\n      } catch (error) {\n        // The server might send non-JSON messages on connect, we can ignore them.\n        console.log('Received non-JSON message:', event.data);\n      }\n    };\n    webSocket.current.onclose = () => {\n      console.log('WebSocket disconnected');\n    };\n    return () => {\n      if (webSocket.current) {\n        webSocket.current.close();\n      }\n    };\n  }, []);\n  const sendMessage = () => {\n    const amountNum = parseFloat(amount);\n    if (webSocket.current && text && !isNaN(amountNum) && amountNum > 0) {\n      const message = {\n        message: {\n          amount: amountNum,\n          text,\n          id: new Date().toISOString()\n        },\n        meta: \"message\",\n        room\n      };\n      webSocket.current.send(JSON.stringify(message));\n      // Since we are using an echo server, the message will be received and added to the list.\n      // In a real app, you might add the message to the list optimistically.\n      setAmount('');\n      setText('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Group Bidding Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messages.map(msg => {\n          var _msg$message, _msg$message2, _msg$message3;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"$\", (_msg$message2 = msg.message) === null || _msg$message2 === void 0 ? void 0 : _msg$message2.amount.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: (_msg$message3 = msg.message) === null || _msg$message3 === void 0 ? void 0 : _msg$message3.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, (_msg$message = msg.message) === null || _msg$message === void 0 ? void 0 : _msg$message.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: amount,\n          onChange: e => setAmount(e.target.value),\n          placeholder: \"Amount\",\n          className: \"amount-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: text,\n          onChange: e => setText(e.target.value),\n          placeholder: \"Message\",\n          className: \"text-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KimsW55zyRbgUQaMPmAuMZ1qv7k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","App","_s","messages","setMessages","amount","setAmount","text","setText","room","setRoom","webSocket","wsUrl","process","env","REACT_APP_WEBSOCKET_URL","current","WebSocket","onopen","console","log","message","meta","send","JSON","stringify","onmessage","event","receivedMessage","parse","data","id","prevMessages","key","error","onclose","close","sendMessage","amountNum","parseFloat","isNaN","Date","toISOString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","_msg$message","_msg$message2","_msg$message3","toFixed","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/lrawicz/develop/code/upwork/qr/bidqr-frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\n\n\ninterface Message {\n  message?:{amount:number, text:string,id:string},\n  meta:string, \n  room:string,\n}\n\nfunction App() {\n\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [amount, setAmount] = useState('');\n  const [text, setText] = useState('');\n  const [room,setRoom] = useState('bidRoom');\n\n  const webSocket = useRef<WebSocket | null>(null);\n\n  useEffect(() => {\n    const wsUrl = process.env.REACT_APP_WEBSOCKET_URL || 'ws://localhost:3000';\n    webSocket.current = new WebSocket(wsUrl);\n\n    webSocket.current.onopen = () => {\n      console.log('WebSocket connected');\n      if (webSocket.current){\n        const message: Message = {\n          meta:\"join\",\n          room\n        }\n        webSocket.current.send(JSON.stringify(message));\n      }\n    };\n\n    webSocket.current.onmessage = (event) => {\n      try {\n        // The public echo server will send back the same message we sent.\n        // In a real application, the server would broadcast messages from other users.\n        const receivedMessage = JSON.parse(event.data);\n        console.log(receivedMessage)\n        if (receivedMessage.amount && receivedMessage.text && receivedMessage.id) {\n            console.log('Received message:', receivedMessage);\n            setMessages((prevMessages) => [...prevMessages, {...receivedMessage, key:receivedMessage.id}]);\n        }\n      } catch (error) {\n        // The server might send non-JSON messages on connect, we can ignore them.\n        console.log('Received non-JSON message:', event.data);\n      }\n    };\n\n    webSocket.current.onclose = () => {\n      console.log('WebSocket disconnected');\n    };\n\n    return () => {\n      if (webSocket.current) {\n        webSocket.current.close();\n      }\n    };\n  }, []);\n\n  const sendMessage = () => {\n    const amountNum = parseFloat(amount);\n    if (webSocket.current && text && !isNaN(amountNum) && amountNum > 0) {\n      const message: Message = {\n        message: {\n          amount:amountNum,\n          text,\n          id: new Date().toISOString(),\n        },\n        meta:\"message\",\n        room\n      };\n      webSocket.current.send(JSON.stringify(message));\n      // Since we are using an echo server, the message will be received and added to the list.\n      // In a real app, you might add the message to the list optimistically.\n      setAmount('');\n      setText('');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Group Bidding Chat</h1>\n      </header>\n      <div className=\"chat-container\">\n        <div className=\"messages\">\n          {messages.map((msg) => (\n            <div key={msg.message?.id} className=\"message\">\n              <span>${msg.message?.amount.toFixed(2)}</span>\n              <p>{msg.message?.text}</p>\n            </div>\n          ))}\n        </div>\n        <div className=\"input-area\">\n          <input\n            type=\"number\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n            placeholder=\"Amount\"\n            className=\"amount-input\"\n          />\n          <input\n            type=\"text\"\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n            placeholder=\"Message\"\n            className=\"text-input\"\n          />\n          <button onClick={sendMessage}>Send</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}